# Generated by Django 4.2.16 on 2024-11-12 10:21

import clients.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_agreed', models.BooleanField(default=False, verbose_name='Aceptó el Consentimiento')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creado')),
                ('agreement_file', models.FileField(blank=True, upload_to=clients.models.agreement_upload_path, verbose_name='Archivo del Consentimiento')),
            ],
            options={
                'verbose_name': 'Consentimiento',
                'verbose_name_plural': 'Consentimientos',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('lastname', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=15, region='MX', verbose_name='Teléfono')),
                ('sex', models.CharField(choices=[('male', 'Masculino'), ('female', 'Femenino')], max_length=6, verbose_name='Sexo')),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)], verbose_name='Edad')),
                ('date_of_birth', models.DateField(validators=[clients.models.validate_birth_date], verbose_name='Fecha de Nacimiento - ej. dd/mm/aaaa')),
                ('civil_status', models.CharField(choices=[('single', 'Soltero(a)'), ('in_relationship', 'En relación')], default='soltero(a)', max_length=15, verbose_name='Estado Civil')),
                ('occupation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ocupación')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='ServiceTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Sin consentimiento', (('aplicacion_pestañas', 'Aplicación de pestañas'), ('desintoxicacion_ionica', 'Desintoxicación iónica'), ('derpamen', 'Derpamen'), ('diseño_cejas', 'Diseño de cejas'), ('lifting_pestañas', 'Lifting de pestañas'), ('limpieza_oidos', 'Limpieza de oídos'), ('pedicure_spa', 'Pedicure SPA'), ('facial', 'Facial'), ('hollywood_pell', 'Hollywood pell'), ('depilacion_laser', 'Depilación laser'), ('masaje:drenaje', 'Masaje: Drenaje linfático brasileño'), ('masaje:reductivo', 'Masaje: Reductivo'), ('masaje:moldeador', 'Masaje: Moldeador'), ('masaje:anticelulitis', 'Masaje: Anti celulitis'), ('masaje:aparatologia', 'Masaje: Aparatología'))), ('Con consentimiento', (('acido_hialuronico:labios', 'Acido hialurónico - labios'), ('acido_hialuronico:nariz', 'Acido hialurónico - nariz'), ('acido_hialuronico:menton', 'Acido hialurónico - mentón'), ('toxina_botuliniea', 'Toxina Botulíniea - Botox'), ('fibroblast:eliminacion_verrugas', 'Fibroblast: Eliminación de verrugas'), ('fibroblast:eliminacion_tatuajes', 'Fibroblast: Eliminación de tatuajes')))], max_length=256, unique=True, verbose_name='Titulo del servicio')),
            ],
            options={
                'verbose_name': 'Servicio | Tratamiento',
                'verbose_name_plural': 'Servicios | Tratamientos',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creado')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas | Observaciones')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'JPG', 'jpeg', 'JPEG', 'png', 'PNG', 'webp']), clients.models.validate_image_size, clients.models.validate_image_dimensions], verbose_name='Imágenes')),
                ('agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consentimientos', to='clients.agreement', verbose_name='Consentimiento')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='clients.client', verbose_name='Cliente')),
                ('titles', models.ManyToManyField(choices=[('Sin consentimiento', (('aplicacion_pestañas', 'Aplicación de pestañas'), ('desintoxicacion_ionica', 'Desintoxicación iónica'), ('derpamen', 'Derpamen'), ('diseño_cejas', 'Diseño de cejas'), ('lifting_pestañas', 'Lifting de pestañas'), ('limpieza_oidos', 'Limpieza de oídos'), ('pedicure_spa', 'Pedicure SPA'), ('facial', 'Facial'), ('hollywood_pell', 'Hollywood pell'), ('depilacion_laser', 'Depilación laser'), ('masaje:drenaje', 'Masaje: Drenaje linfático brasileño'), ('masaje:reductivo', 'Masaje: Reductivo'), ('masaje:moldeador', 'Masaje: Moldeador'), ('masaje:anticelulitis', 'Masaje: Anti celulitis'), ('masaje:aparatologia', 'Masaje: Aparatología'))), ('Con consentimiento', (('acido_hialuronico:labios', 'Acido hialurónico - labios'), ('acido_hialuronico:nariz', 'Acido hialurónico - nariz'), ('acido_hialuronico:menton', 'Acido hialurónico - mentón'), ('toxina_botuliniea', 'Toxina Botulíniea - Botox'), ('fibroblast:eliminacion_verrugas', 'Fibroblast: Eliminación de verrugas'), ('fibroblast:eliminacion_tatuajes', 'Fibroblast: Eliminación de tatuajes')))], related_name='service_titles', to='clients.servicetitle', verbose_name='Servicios | Tratamientos')),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_treatment', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Tratamientos previos')),
                ('had_botox', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Ha usado botox antes?')),
                ('boto_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tipo de botox')),
                ('historic_treatments', models.TextField(blank=True, null=True, verbose_name='Historial de tratamientos')),
                ('birth_control_pills', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Usa píldoras de contra el embarazo')),
                ('is_pregnant', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Está embarazada')),
                ('body_prothesis', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Tiene prótesis')),
                ('is_allergic', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Es alérgico(a) a algo')),
                ('allergies', models.CharField(blank=True, max_length=256, null=True, verbose_name='Alergias')),
                ('is_anemic', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Es anémico(a)')),
                ('under_medical_control', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Bajo control médico')),
                ('medical_treatment', models.CharField(blank=True, max_length=256, null=True, verbose_name='Tratamiento médico')),
                ('current_illnesses', models.TextField(blank=True, null=True, verbose_name='Padecimientos')),
                ('chronic_illnesses', models.CharField(blank=True, max_length=256, null=True, verbose_name='Enfermedades crónicas')),
                ('coagulation_problems', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Problemas de coagulación')),
                ('social_plans', models.CharField(blank=True, max_length=256, null=True, verbose_name='Planes sociales')),
                ('is_drinker', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Ingiere alcohol')),
                ('is_smoker', models.CharField(choices=[('yes', 'Sí'), ('no', 'No')], default='no', max_length=5, verbose_name='Es fumador(a)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaires', to='clients.client', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Cuestionario',
                'verbose_name_plural': 'Cuestionarios',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='treatment_history',
            field=models.ManyToManyField(blank=True, related_name='client_treatment_history', to='clients.servicetitle', verbose_name='Historial de servicios | tratamientos'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField(default=django.utils.timezone.now, validators=[clients.models.validate_business_hours], verbose_name='Fecha de cita')),
                ('google_event_id', models.CharField(blank=True, help_text='Puede dejar este espacio en blanco', max_length=200, null=True, verbose_name='ID de evento')),
                ('beautician', models.CharField(choices=[('lulu', 'Lulú')], default='Lulú', max_length=100, verbose_name='Esteticista')),
                ('location', models.CharField(choices=[('principal', 'Principal: López Mateos #155, Tepatitlán'), ('client_address', 'A domicilio del cliente')], default='Principal: López Mateos #155, Tepatitlán', help_text='Opciones: A domicilio, instalaciones Lulú', max_length=100, verbose_name='Lugar de aplicación')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='clients.client', verbose_name='Cliente')),
                ('services', models.ManyToManyField(choices=[('Sin consentimiento', (('aplicacion_pestañas', 'Aplicación de pestañas'), ('desintoxicacion_ionica', 'Desintoxicación iónica'), ('derpamen', 'Derpamen'), ('diseño_cejas', 'Diseño de cejas'), ('lifting_pestañas', 'Lifting de pestañas'), ('limpieza_oidos', 'Limpieza de oídos'), ('pedicure_spa', 'Pedicure SPA'), ('facial', 'Facial'), ('hollywood_pell', 'Hollywood pell'), ('depilacion_laser', 'Depilación laser'), ('masaje:drenaje', 'Masaje: Drenaje linfático brasileño'), ('masaje:reductivo', 'Masaje: Reductivo'), ('masaje:moldeador', 'Masaje: Moldeador'), ('masaje:anticelulitis', 'Masaje: Anti celulitis'), ('masaje:aparatologia', 'Masaje: Aparatología'))), ('Con consentimiento', (('acido_hialuronico:labios', 'Acido hialurónico - labios'), ('acido_hialuronico:nariz', 'Acido hialurónico - nariz'), ('acido_hialuronico:menton', 'Acido hialurónico - mentón'), ('toxina_botuliniea', 'Toxina Botulíniea - Botox'), ('fibroblast:eliminacion_verrugas', 'Fibroblast: Eliminación de verrugas'), ('fibroblast:eliminacion_tatuajes', 'Fibroblast: Eliminación de tatuajes')))], related_name='service_appointments', to='clients.servicetitle', verbose_name='Servicios | Tratamientos')),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
            },
        ),
        migrations.AddField(
            model_name='agreement',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='consentimientos', to='clients.client', verbose_name='Cliente'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Domicilio')),
                ('city', models.CharField(max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(max_length=100, verbose_name='Estado')),
                ('zip_code', models.CharField(max_length=10, verbose_name='Código Postal')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='addresses', to='clients.client', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Domicilio',
                'verbose_name_plural': 'Domicilios',
            },
        ),
    ]
